{"version":3,"sources":["../node_modules/lodash/capitalize.js","views/Nft/market/Collection/TopBar.tsx","views/Nft/market/Collection/LowestPriceStatBoxItem.tsx","views/Nft/market/Collection/Header.tsx","../node_modules/lodash/times.js","../node_modules/lodash/toInteger.js","../node_modules/lodash/_castFunction.js","components/AddressInputSelect/index.tsx","../node_modules/lodash/upperFirst.js","../node_modules/lodash/_hasUnicode.js","views/Nft/market/components/MarketPageHeader.tsx","views/Nft/market/hooks/useGetCollectionDistribution.tsx","views/Nft/market/components/BannerHeader/AvatarImage.tsx","views/Nft/market/components/StatBox.tsx","../node_modules/lodash/_createCaseFirst.js","../node_modules/lodash/_castSlice.js","../node_modules/lodash/_baseSlice.js","../node_modules/lodash/_stringToArray.js","../node_modules/lodash/_asciiToArray.js","../node_modules/lodash/_unicodeToArray.js","views/Nft/market/components/SearchBar.tsx","views/Nft/market/components/MarketPageTitle.tsx","views/Nft/market/components/BaseSubMenu.tsx","views/Nft/market/components/BannerHeader/BannerImage.tsx","views/Nft/market/components/BannerHeader/index.tsx"],"names":["toString","require","upperFirst","module","exports","string","toLowerCase","BackLink","styled","RouterLink","theme","colors","primary","TopBar","t","useTranslation","alignItems","justifyContent","mb","to","nftsBaseUrl","color","width","SearchBar","LowestPriceStatBoxItem","collectionAddress","props","useState","lowestPrice","setLowestPrice","useEffect","a","getLowestPriceInCollection","lowestCollectionPrice","fetchLowestPrice","formattedLowestPrice","toLocaleString","undefined","minimumFractionDigits","maximumFractionDigits","StatBox","title","symbol","stat","Header","collection","useParams","totalSupply","numberTokensListed","totalVolumeBNB","banner","avatar","useLocation","pathname","hash","volume","parseFloat","itemsConfig","label","href","MarketPageHeader","BannerHeader","bannerImage","large","AvatarImage","src","MarketPageTitle","name","description","formatNumber","Number","address","Container","BaseSubMenu","items","activeItem","mt","baseTimes","castFunction","toInteger","MAX_ARRAY_LENGTH","nativeMin","Math","min","n","iteratee","index","length","result","toFinite","value","remainder","identity","ResultStatus","SubMenu","div","input","inputSecondary","radii","default","isOpen","AddressLink","Text","initialState","isFetching","resultFound","NOT_VALID","defaultValidAddressHandler","Promise","resolve","AddressInputSelect","onValidAddress","onAddressClick","state","setState","isAddress","prevState","hasResults","FOUND","NOT_FOUND","validAddressHandler","position","placeholder","subject","onChange","evt","newValue","target","style","zIndex","paddingRight","top","right","onClick","px","fontWeight","createCaseFirst","reHasUnicode","RegExp","test","background","useTheme","isDark","useGetCollectionDistributionPB","data","getCollectionDistributionApi","pancakeBunniesAddress","apiResponse","fetchTokens","useGetCollectionDistribution","attrs","alt","borderColor","StatBoxItem","fontSize","textAlign","height","mx","Flex","invertedContrast","cardBorder","card","castSlice","hasUnicode","stringToArray","methodName","strSymbols","chr","charAt","trailing","join","slice","baseSlice","array","start","end","Array","asciiToArray","unicodeToArray","split","rsAstral","rsCombo","rsFitz","rsNonAstral","rsRegional","rsSurrPair","reOptMod","rsOptVar","rsSeq","rsSymbol","reUnicode","match","history","useHistory","push","children","gridGap","gridTemplateColumns","as","scale","SubMenuItems","StyledBannerImage","mediaQueries","sm","md","bannerAlt","flexDirection","pb","BannerImage","bottom","left"],"mappings":"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","file":"static/js/2.a165baed.chunk.js","sourcesContent":["var toString = require('./toString'),\n    upperFirst = require('./upperFirst');\n\n/**\n * Converts the first character of `string` to upper case and the remaining\n * to lower case.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to capitalize.\n * @returns {string} Returns the capitalized string.\n * @example\n *\n * _.capitalize('FRED');\n * // => 'Fred'\n */\nfunction capitalize(string) {\n  return upperFirst(toString(string).toLowerCase());\n}\n\nmodule.exports = capitalize;\n","import React from 'react'\nimport { Box, ChevronLeftIcon, Flex } from '@pancakeswap/uikit'\nimport { Link as RouterLink } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { nftsBaseUrl } from 'views/Nft/market/constants'\nimport SearchBar from '../components/SearchBar'\n\nconst BackLink = styled(RouterLink)`\n  align-items: center;\n  color: ${({ theme }) => theme.colors.primary};\n  display: inline-flex;\n  font-weight: 600;\n`\n\nconst TopBar: React.FC = () => {\n  const { t } = useTranslation()\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\n      <BackLink to={nftsBaseUrl}>\n        <ChevronLeftIcon color=\"primary\" width=\"24px\" />\n        {t('All Collections')}\n      </BackLink>\n      <Box>\n        <SearchBar />\n      </Box>\n    </Flex>\n  )\n}\n\nexport default TopBar\n","import React, { useEffect, useState } from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { getLowestPriceInCollection } from 'state/nftMarket/helpers'\nimport { StatBoxItem, StatBoxItemProps } from '../components/StatBox'\n\ninterface LowestPriceStatBoxItemProps extends Omit<StatBoxItemProps, 'title' | 'stat'> {\n  collectionAddress: string\n}\n\nconst LowestPriceStatBoxItem: React.FC<LowestPriceStatBoxItemProps> = ({ collectionAddress, ...props }) => {\n  const [lowestPrice, setLowestPrice] = useState<number>(null)\n  const { t } = useTranslation()\n\n  useEffect(() => {\n    const fetchLowestPrice = async () => {\n      const lowestCollectionPrice = await getLowestPriceInCollection(collectionAddress)\n      setLowestPrice(lowestCollectionPrice)\n    }\n\n    fetchLowestPrice()\n  }, [collectionAddress, setLowestPrice])\n\n  const formattedLowestPrice =\n    lowestPrice === null\n      ? null\n      : lowestPrice.toLocaleString(undefined, {\n          minimumFractionDigits: 3,\n          maximumFractionDigits: 3,\n        })\n\n  return <StatBoxItem title={t('Lowest (%symbol%)', { symbol: 'BNB' })} stat={formattedLowestPrice} {...props} />\n}\n\nexport default LowestPriceStatBoxItem\n","import React from 'react'\nimport { useLocation, useParams } from 'react-router'\nimport { Text } from '@pancakeswap/uikit'\nimport { Collection } from 'state/nftMarket/types'\nimport { formatNumber } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport Container from 'components/Layout/Container'\nimport MarketPageHeader from '../components/MarketPageHeader'\nimport MarketPageTitle from '../components/MarketPageTitle'\nimport StatBox, { StatBoxItem } from '../components/StatBox'\nimport BannerHeader from '../components/BannerHeader'\nimport AvatarImage from '../components/BannerHeader/AvatarImage'\nimport BaseSubMenu from '../components/BaseSubMenu'\nimport { nftsBaseUrl } from '../constants'\nimport TopBar from './TopBar'\nimport LowestPriceStatBoxItem from './LowestPriceStatBoxItem'\n\ninterface HeaderProps {\n  collection: Collection\n}\n\nconst Header: React.FC<HeaderProps> = ({ collection }) => {\n  const { collectionAddress } = useParams<{ collectionAddress: string }>()\n  const { totalSupply, numberTokensListed, totalVolumeBNB, banner, avatar } = collection\n  const { t } = useTranslation()\n  const { pathname, hash } = useLocation()\n\n  const volume = totalVolumeBNB\n    ? parseFloat(totalVolumeBNB).toLocaleString(undefined, {\n        minimumFractionDigits: 3,\n        maximumFractionDigits: 3,\n      })\n    : '0'\n\n  const itemsConfig = [\n    {\n      label: t('Items'),\n      href: `${nftsBaseUrl}/collections/${collectionAddress}#items`,\n    },\n    {\n      label: t('Traits'),\n      href: `${nftsBaseUrl}/collections/${collectionAddress}#traits`,\n    },\n  ]\n\n  return (\n    <>\n      <MarketPageHeader>\n        <TopBar />\n        <BannerHeader bannerImage={banner.large} avatar={<AvatarImage src={avatar} />} />\n        <MarketPageTitle\n          title={collection.name}\n          description={collection.description ? <Text color=\"textSubtle\">{t(collection.description)}</Text> : null}\n        >\n          <StatBox>\n            <StatBoxItem title={t('Items')} stat={formatNumber(Number(totalSupply), 0, 0)} />\n            <StatBoxItem\n              title={t('Items listed')}\n              stat={numberTokensListed ? formatNumber(Number(numberTokensListed), 0, 0) : '0'}\n            />\n            <LowestPriceStatBoxItem collectionAddress={collection.address} />\n            <StatBoxItem title={t('Vol. (%symbol%)', { symbol: 'BNB' })} stat={volume} />\n          </StatBox>\n        </MarketPageTitle>\n      </MarketPageHeader>\n      <Container>\n        <BaseSubMenu items={itemsConfig} activeItem={`${pathname}${hash || '#items'}`} mt=\"24px\" mb=\"8px\" />\n      </Container>\n    </>\n  )\n}\n\nexport default Header\n","var baseTimes = require('./_baseTimes'),\n    castFunction = require('./_castFunction'),\n    toInteger = require('./toInteger');\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used as references for the maximum length and index of an array. */\nvar MAX_ARRAY_LENGTH = 4294967295;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min;\n\n/**\n * Invokes the iteratee `n` times, returning an array of the results of\n * each invocation. The iteratee is invoked with one argument; (index).\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n * @example\n *\n * _.times(3, String);\n * // => ['0', '1', '2']\n *\n *  _.times(4, _.constant(0));\n * // => [0, 0, 0, 0]\n */\nfunction times(n, iteratee) {\n  n = toInteger(n);\n  if (n < 1 || n > MAX_SAFE_INTEGER) {\n    return [];\n  }\n  var index = MAX_ARRAY_LENGTH,\n      length = nativeMin(n, MAX_ARRAY_LENGTH);\n\n  iteratee = castFunction(iteratee);\n  n -= MAX_ARRAY_LENGTH;\n\n  var result = baseTimes(length, iteratee);\n  while (++index < n) {\n    iteratee(index);\n  }\n  return result;\n}\n\nmodule.exports = times;\n","var toFinite = require('./toFinite');\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\nmodule.exports = toInteger;\n","var identity = require('./identity');\n\n/**\n * Casts `value` to `identity` if it's not a function.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {Function} Returns cast function.\n */\nfunction castFunction(value) {\n  return typeof value == 'function' ? value : identity;\n}\n\nmodule.exports = castFunction;\n","import React, { ChangeEvent, useState, useEffect } from 'react'\nimport { Box, BoxProps, Text, Input } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { isAddress } from 'utils'\nimport { useTranslation } from 'contexts/Localization'\nimport CircleLoader from 'components/Loader/CircleLoader'\n\nenum ResultStatus {\n  NOT_VALID,\n  FOUND,\n  NOT_FOUND,\n}\n\ninterface AddressInputSelectProps extends BoxProps {\n  onValidAddress?: (value: string) => Promise<boolean>\n  onAddressClick: (value: string) => void\n}\n\nconst SubMenu = styled.div<{ isOpen: boolean }>`\n  align-items: center;\n  background: ${({ theme }) => theme.colors.input};\n  border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n  border-radius: 0 0 ${({ theme }) => theme.radii.default} ${({ theme }) => theme.radii.default};\n  left: 0;\n  padding-bottom: 8px;\n  padding-top: 16px;\n  position: absolute;\n  top: calc(100% - 12px);\n  transition: transform 0.15s, opacity 0.15s;\n  transform: scaleY(0);\n  transform-origin: top;\n  width: 100%;\n  z-index: 15;\n\n  ${({ isOpen }) =>\n    isOpen &&\n    `\n    height: auto;\n    opacity: 1;\n    transform: scaleY(1);\n  `}\n`\n\nconst AddressLink = styled(Text)`\n  cursor: pointer;\n  overflow-wrap: break-word;\n  font-weight: bold;\n  padding-left: 16px;\n  padding-right: 16px;\n`\n\nconst initialState = {\n  isFetching: false,\n  resultFound: ResultStatus.NOT_VALID,\n  value: '',\n}\n\nconst defaultValidAddressHandler = () => Promise.resolve(true)\n\nconst AddressInputSelect: React.FC<AddressInputSelectProps> = ({\n  onValidAddress = defaultValidAddressHandler,\n  onAddressClick,\n  ...props\n}) => {\n  const [state, setState] = useState(initialState)\n  const { t } = useTranslation()\n  const { isFetching, resultFound, value } = state\n\n  const handleChange = (evt: ChangeEvent<HTMLInputElement>) => {\n    const { value: newValue } = evt.target\n    setState((prevState) => ({\n      ...prevState,\n      value: newValue,\n    }))\n  }\n\n  const handleClick = () => {\n    setState(initialState)\n    onAddressClick(state.value)\n  }\n\n  // When we have a valid address fetch the data\n  useEffect(() => {\n    const isValidAddress = isAddress(value) !== false\n\n    const validAddressHandler = async () => {\n      try {\n        setState((prevState) => ({ ...prevState, isFetching: true }))\n        const hasResults = await onValidAddress(value)\n\n        setState((prevState) => ({\n          ...prevState,\n          isFetching: false,\n          resultFound: hasResults ? ResultStatus.FOUND : ResultStatus.NOT_FOUND,\n        }))\n      } catch {\n        setState((prevState) => ({ ...prevState, isFetching: false }))\n      }\n    }\n\n    if (isValidAddress) {\n      validAddressHandler()\n    } else {\n      setState((prevState) => ({ ...prevState, resultFound: ResultStatus.NOT_VALID }))\n    }\n  }, [value, onValidAddress, setState])\n\n  return (\n    <Box position=\"relative\" {...props}>\n      <Input\n        placeholder={t('Search %subject%', { subject: t('Address').toLowerCase() })}\n        value={state.value}\n        onChange={handleChange}\n        style={{ position: 'relative', zIndex: 16, paddingRight: '40px' }}\n      />\n      {isFetching && (\n        <Box position=\"absolute\" top=\"12px\" right=\"16px\" style={{ zIndex: 17 }}>\n          <CircleLoader />\n        </Box>\n      )}\n      <SubMenu isOpen={resultFound !== ResultStatus.NOT_VALID}>\n        {resultFound === ResultStatus.FOUND ? (\n          <AddressLink onClick={handleClick}>{state.value}</AddressLink>\n        ) : (\n          <Text px=\"16px\" fontWeight=\"bold\">\n            {t('No results found.')}\n          </Text>\n        )}\n      </SubMenu>\n    </Box>\n  )\n}\n\nexport default AddressInputSelect\n","var createCaseFirst = require('./_createCaseFirst');\n\n/**\n * Converts the first character of `string` to upper case.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.upperFirst('fred');\n * // => 'Fred'\n *\n * _.upperFirst('FRED');\n * // => 'FRED'\n */\nvar upperFirst = createCaseFirst('toUpperCase');\n\nmodule.exports = upperFirst;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsZWJ = '\\\\u200d';\n\n/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\nvar reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n/**\n * Checks if `string` contains Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n */\nfunction hasUnicode(string) {\n  return reHasUnicode.test(string);\n}\n\nmodule.exports = hasUnicode;\n","import React from 'react'\nimport PageHeader, { PageHeaderProps } from 'components/PageHeader'\nimport useTheme from 'hooks/useTheme'\n\nconst MarketPageHeader: React.FC<PageHeaderProps> = (props) => {\n  const { theme } = useTheme()\n  const background = theme.isDark\n    ? 'linear-gradient(166.77deg, #3B4155 0%, #3A3045 100%)'\n    : 'linear-gradient(111.68deg, #f2ecf2 0%, #e8f2f6 100%)'\n  return <PageHeader background={background} {...props} />\n}\n\nexport default MarketPageHeader\n","import { useEffect, useState } from 'react'\nimport { getCollectionDistributionApi } from 'state/nftMarket/helpers'\nimport { ApiCollectionDistribution, ApiCollectionDistributionPB } from 'state/nftMarket/types'\nimport { pancakeBunniesAddress } from '../constants'\n\ninterface State {\n  isFetching: boolean\n  data: ApiCollectionDistribution['data']\n}\n\nconst useGetCollectionDistribution = (collectionAddress: string) => {\n  const [state, setState] = useState<State>({ isFetching: false, data: null })\n\n  useEffect(() => {\n    const fetchTokens = async () => {\n      setState((prevState) => ({ ...prevState, isFetching: true }))\n      const apiResponse = await getCollectionDistributionApi<ApiCollectionDistribution>(collectionAddress)\n      setState({\n        isFetching: false,\n        data: apiResponse.data,\n      })\n    }\n\n    fetchTokens()\n  }, [collectionAddress, setState])\n\n  return state\n}\n\ninterface StatePB {\n  isFetching: boolean\n  data: ApiCollectionDistributionPB['data']\n}\n\nexport const useGetCollectionDistributionPB = () => {\n  const [state, setState] = useState<StatePB>({ isFetching: false, data: null })\n\n  useEffect(() => {\n    const fetchTokens = async () => {\n      setState((prevState) => ({ ...prevState, isFetching: true }))\n      const apiResponse = await getCollectionDistributionApi<ApiCollectionDistributionPB>(pancakeBunniesAddress)\n      setState({\n        isFetching: false,\n        data: apiResponse.data,\n      })\n    }\n\n    fetchTokens()\n  }, [setState])\n\n  return state\n}\n\nexport default useGetCollectionDistribution\n","import styled from 'styled-components'\n\ninterface AvatarImageProps {\n  src: string\n  borderColor?: string\n  alt?: string\n}\n\nconst AvatarImage = styled.div.attrs<AvatarImageProps>(({ alt }) => ({\n  alt,\n}))<AvatarImageProps>`\n  background: url('${({ src }) => src}');\n  background-repeat: no-repeat;\n  background-size: cover;\n  border-radius: 50%;\n  position: relative;\n  width: 96px;\n  height: 96px;\n  border: 4px ${({ borderColor }) => borderColor || '#f2ecf2'} solid;\n\n  & > img {\n    border-radius: 50%;\n  }\n`\n\nexport default AvatarImage\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Box, BoxProps, Flex, Skeleton, Text } from '@pancakeswap/uikit'\n\nexport interface StatBoxItemProps extends BoxProps {\n  title: string\n  stat: string\n}\n\nexport const StatBoxItem: React.FC<StatBoxItemProps> = ({ title, stat, ...props }) => (\n  <Box {...props}>\n    <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"center\">\n      {title}\n    </Text>\n    {stat === null ? (\n      <Skeleton height=\"24px\" width=\"50%\" mx=\"auto\" />\n    ) : (\n      <Text fontWeight=\"600\" textAlign=\"center\">\n        {stat}\n      </Text>\n    )}\n  </Box>\n)\n\nconst StatBox = styled(Flex)`\n  align-items: center;\n  background: ${({ theme }) => theme.colors.invertedContrast};\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  border-radius: ${({ theme }) => theme.radii.card};\n  justify-content: space-around;\n  padding: 8px;\n  width: 100%;\n`\n\nexport default StatBox\n","var castSlice = require('./_castSlice'),\n    hasUnicode = require('./_hasUnicode'),\n    stringToArray = require('./_stringToArray'),\n    toString = require('./toString');\n\n/**\n * Creates a function like `_.lowerFirst`.\n *\n * @private\n * @param {string} methodName The name of the `String` case method to use.\n * @returns {Function} Returns the new case function.\n */\nfunction createCaseFirst(methodName) {\n  return function(string) {\n    string = toString(string);\n\n    var strSymbols = hasUnicode(string)\n      ? stringToArray(string)\n      : undefined;\n\n    var chr = strSymbols\n      ? strSymbols[0]\n      : string.charAt(0);\n\n    var trailing = strSymbols\n      ? castSlice(strSymbols, 1).join('')\n      : string.slice(1);\n\n    return chr[methodName]() + trailing;\n  };\n}\n\nmodule.exports = createCaseFirst;\n","var baseSlice = require('./_baseSlice');\n\n/**\n * Casts `array` to a slice if it's needed.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {number} start The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the cast slice.\n */\nfunction castSlice(array, start, end) {\n  var length = array.length;\n  end = end === undefined ? length : end;\n  return (!start && end >= length) ? array : baseSlice(array, start, end);\n}\n\nmodule.exports = castSlice;\n","/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\nmodule.exports = baseSlice;\n","var asciiToArray = require('./_asciiToArray'),\n    hasUnicode = require('./_hasUnicode'),\n    unicodeToArray = require('./_unicodeToArray');\n\n/**\n * Converts `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction stringToArray(string) {\n  return hasUnicode(string)\n    ? unicodeToArray(string)\n    : asciiToArray(string);\n}\n\nmodule.exports = stringToArray;\n","/**\n * Converts an ASCII `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction asciiToArray(string) {\n  return string.split('');\n}\n\nmodule.exports = asciiToArray;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsAstral = '[' + rsAstralRange + ']',\n    rsCombo = '[' + rsComboRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\nvar reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n/**\n * Converts a Unicode `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction unicodeToArray(string) {\n  return string.match(reUnicode) || [];\n}\n\nmodule.exports = unicodeToArray;\n","import React from 'react'\nimport { useHistory } from 'react-router-dom'\nimport AddressInputSelect from 'components/AddressInputSelect'\nimport { nftsBaseUrl } from 'views/Nft/market/constants'\n\nconst SearchBar: React.FC = (props) => {\n  const history = useHistory()\n\n  const handleAddressClick = (value: string) => {\n    history.push(`${nftsBaseUrl}/profile/${value}`)\n  }\n\n  return <AddressInputSelect onAddressClick={handleAddressClick} {...props} />\n}\n\nexport default SearchBar\n","import React, { ReactNode } from 'react'\nimport { Box, Grid, GridProps, Heading } from '@pancakeswap/uikit'\n\ninterface MarketPageTitleProps extends GridProps {\n  title: string\n  description?: ReactNode\n}\n\nconst MarketPageTitle: React.FC<MarketPageTitleProps> = ({ title, description, children, ...props }) => (\n  <Grid gridGap=\"16px\" alignItems=\"center\" gridTemplateColumns={['1fr', null, null, null, 'repeat(2, 1fr)']} {...props}>\n    <Box>\n      <Heading as=\"h1\" scale=\"xl\" color=\"secondary\" mb=\"16px\">\n        {title}\n      </Heading>\n      {description}\n    </Box>\n    <Box>{children}</Box>\n  </Grid>\n)\n\nexport default MarketPageTitle\n","import { SubMenuItems } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\nconst BaseSubMenu = styled(SubMenuItems)`\n  background-color: transparent;\n  border-bottom: 1px ${({ theme }) => theme.colors.cardBorder} solid;\n`\n\nexport default BaseSubMenu\n","import styled from 'styled-components'\n\ninterface StyledBannerImageProps {\n  src: string\n  alt?: string\n}\n\nconst StyledBannerImage = styled.div.attrs<StyledBannerImageProps>(({ alt }) => ({\n  alt,\n}))<StyledBannerImageProps>`\n  ${({ src, theme }) => (src ? `background-image: url('${src}')` : `background-color: ${theme.colors.cardBorder}`)};\n  background-image: url('${({ src }) => src}');\n  background-size: cover;\n  background-position: center;\n  background-repeat: no-repeat;\n  flex: none;\n  width: 100%;\n  border-radius: 32px;\n  height: 123px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    height: 192px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    height: 256px;\n  }\n`\n\nexport default StyledBannerImage\n","import React, { ReactNode } from 'react'\nimport { Flex, Box, FlexProps } from '@pancakeswap/uikit'\nimport BannerImage from './BannerImage'\n\ninterface BannerHeaderProps extends FlexProps {\n  bannerImage: string\n  bannerAlt?: string\n  avatar?: ReactNode\n}\n\nconst BannerHeader: React.FC<BannerHeaderProps> = ({ bannerImage, bannerAlt, avatar, children, ...props }) => {\n  return (\n    <Flex flexDirection=\"column\" mb=\"24px\" {...props}>\n      <Box position=\"relative\" pb=\"56px\">\n        <BannerImage src={bannerImage} alt={bannerAlt} />\n        <Box position=\"absolute\" bottom={0} left={-4}>\n          <Flex alignItems=\"flex-end\">\n            {avatar}\n            {children}\n          </Flex>\n        </Box>\n      </Box>\n    </Flex>\n  )\n}\n\nexport default BannerHeader\n"],"sourceRoot":""}