{"version":3,"sources":["views/Nft/market/Collections/index.tsx"],"names":["Collectible","t","useTranslation","collections","useGetCollections","as","scale","color","textAlign","Object","keys","map","key","collection","volume","totalVolumeBNB","parseFloat","toLocaleString","undefined","minimumFractionDigits","maximumFractionDigits","to","nftsBaseUrl","address","alignItems","src","avatar","width","height","mr","name","ml","numberTokensListed","totalSupply"],"mappings":"8HAAA,iFAqEeA,UA5DK,WAClB,IAAQC,EAAMC,cAAND,EACFE,EAAcC,cAEpB,OACE,qCACE,cAAC,IAAD,UACE,cAAC,KAAD,CAASC,GAAG,KAAKC,MAAM,MAAMC,MAAM,YAAnC,SACGN,EAAE,mBAGP,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAAC,KAAD,WACE,gCACE,+BACE,cAAC,KAAD,CAAIO,UAAU,OAAd,SAAsBP,EAAE,gBACxB,cAAC,KAAD,CAAIO,UAAU,OAAd,SAAsBP,EAAE,YACxB,cAAC,KAAD,CAAIO,UAAU,OAAd,SAAsBP,EAAE,WACxB,cAAC,KAAD,CAAIO,UAAU,OAAd,SAAsBP,EAAE,iBAG5B,gCACGQ,OAAOC,KAAKP,GAAaQ,KAAI,SAACC,GAC7B,IAAMC,EAAaV,EAAYS,GACzBE,EAASD,EAAWE,eACtBC,WAAWH,EAAWE,gBAAgBE,oBAAeC,EAAW,CAC9DC,sBAAuB,EACvBC,sBAAuB,IAEzB,IACJ,OACE,+BACE,cAAC,KAAD,UACE,cAAC,IAAD,CAAMC,GAAE,UAAKC,IAAL,wBAAgCT,EAAWU,SAAnD,SACE,eAAC,KAAD,CAAMC,WAAW,SAAjB,UACE,cAAC,KAAD,CAAeC,IAAKZ,EAAWa,OAAQC,MAAO,GAAIC,OAAQ,GAAIC,GAAG,SAChEhB,EAAWiB,YAIlB,cAAC,KAAD,UACE,eAAC,KAAD,CAAMN,WAAW,SAAjB,UACGV,EACD,cAAC,IAAD,CAAsBiB,GAAG,aAG7B,cAAC,KAAD,UAAKlB,EAAWmB,qBAChB,cAAC,KAAD,UAAKnB,EAAWoB","file":"static/js/39.199976ea.chunk.js","sourcesContent":["import React from 'react'\nimport { Table, Th, Td, Card, ProfileAvatar, Flex, BnbUsdtPairTokenIcon, Heading } from '@pancakeswap/uikit'\nimport { Link } from 'react-router-dom'\nimport { useGetCollections } from 'state/nftMarket/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport Page from 'components/Layout/Page'\nimport PageHeader from 'components/PageHeader'\nimport { nftsBaseUrl } from 'views/Nft/market/constants'\n\nconst Collectible = () => {\n  const { t } = useTranslation()\n  const collections = useGetCollections()\n\n  return (\n    <>\n      <PageHeader>\n        <Heading as=\"h1\" scale=\"xxl\" color=\"secondary\">\n          {t('Collections')}\n        </Heading>\n      </PageHeader>\n      <Page>\n        <Card>\n          <Table>\n            <thead>\n              <tr>\n                <Th textAlign=\"left\">{t('Collection')}</Th>\n                <Th textAlign=\"left\">{t('Volume')}</Th>\n                <Th textAlign=\"left\">{t('Items')}</Th>\n                <Th textAlign=\"left\">{t('Supply')}</Th>\n              </tr>\n            </thead>\n            <tbody>\n              {Object.keys(collections).map((key) => {\n                const collection = collections[key]\n                const volume = collection.totalVolumeBNB\n                  ? parseFloat(collection.totalVolumeBNB).toLocaleString(undefined, {\n                      minimumFractionDigits: 3,\n                      maximumFractionDigits: 3,\n                    })\n                  : '0'\n                return (\n                  <tr>\n                    <Td>\n                      <Link to={`${nftsBaseUrl}/collections/${collection.address}`}>\n                        <Flex alignItems=\"center\">\n                          <ProfileAvatar src={collection.avatar} width={48} height={48} mr=\"16px\" />\n                          {collection.name}\n                        </Flex>\n                      </Link>\n                    </Td>\n                    <Td>\n                      <Flex alignItems=\"center\">\n                        {volume}\n                        <BnbUsdtPairTokenIcon ml=\"8px\" />\n                      </Flex>\n                    </Td>\n                    <Td>{collection.numberTokensListed}</Td>\n                    <Td>{collection.totalSupply}</Td>\n                  </tr>\n                )\n              })}\n            </tbody>\n          </Table>\n        </Card>\n      </Page>\n    </>\n  )\n}\n\nexport default Collectible\n"],"sourceRoot":""}